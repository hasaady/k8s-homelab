apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect
  namespace: messaging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-connect
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      containers:
      - name: kafka-connect
        image: hasaady/kafka-connect:latest   # build from kafka-connect/Dockerfile
        ports:
          - containerPort: 8083
        env:
          - name: CONNECT_BOOTSTRAP_SERVERS
            value: "kafka:9094"
          - name: CONNECT_GROUP_ID
            value: "connect-cluster"
          - name: CONNECT_CONFIG_STORAGE_TOPIC
            value: "connect-configs"
          - name: CONNECT_OFFSET_STORAGE_TOPIC
            value: "connect-offsets"
          - name: CONNECT_STATUS_STORAGE_TOPIC
            value: "connect-status"
          - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
            value: "1"
          - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
            value: "1"
          - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
            value: "1"
          - name: CONNECT_REST_PORT
            value: "8083"
          - name: CONNECT_REST_ADVERTISED_HOST_NAME
            value: "kafka-connect"
          - name: CONNECT_KEY_CONVERTER
            value: "io.confluent.connect.avro.AvroConverter"
          - name: CONNECT_VALUE_CONVERTER
            value: "io.confluent.connect.avro.AvroConverter"
          - name: CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
            value: "http://schema-registry:8081"
          - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
            value: "http://schema-registry:8081"
        volumeMounts:
          - mountPath: /var/lib/kafka-connect
            name: kafka-connect-data
      volumes:
      - name: kafka-connect-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-connect
  namespace: messaging
spec:
  ports:
    - port: 8083
      targetPort: 8083
  selector:
    app: kafka-connect
